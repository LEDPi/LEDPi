#ifndef _H_GUI_CON_
#define _H_GUI_CON_

////////////////////////////////////////////////////////////////////////////////
// FILE: gui_con.h
// DESC: Cointains the interface for the user interface. Draws the console based
//	 graphical user interface.
////////////////////////////////////////////////////////////////////////////////

#include <stdint.h>
#include <stdbool.h>
#include <ncurses.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdarg.h>
#include <time.h>
#include <signal.h>

#include "gui/gui_int.h"
#include "gui/logger.h"
#include "main.h"
#include "mux/mux_test.h"

typedef enum 
{
	CON_ERROR	= 0,
	CON_WARNING	= 1,
	CON_DEBUG	= 2,
	CON_COM		= 3,
} con_log_lvl_t, *pcon_log_lvl_t;

////////////////////////////////////////////////////////////////////////////////
// Initializes the console.
////////////////////////////////////////////////////////////////////////////////
bool con_init();

////////////////////////////////////////////////////////////////////////////////
// Closes the console and releases used memory.
////////////////////////////////////////////////////////////////////////////////
void con_deinit();

////////////////////////////////////////////////////////////////////////////////
// Handles the user input.
////////////////////////////////////////////////////////////////////////////////
void con_run();

////////////////////////////////////////////////////////////////////////////////
// Sets the current status message
////////////////////////////////////////////////////////////////////////////////
void con_set_status(const char *msg, ...);

////////////////////////////////////////////////////////////////////////////////
// Logs the given formatted message
// PARA:
//	lvl	- the log level
//	msg	- the log message
//	...	- formatted parameter
////////////////////////////////////////////////////////////////////////////////
void con_log(int lvl, const char *msg, ...);	

////////////////////////////////////////////////////////////////////////////////
// Logs the given formatted message and takes a va_list as parameter.
// PARA:
//	lvl	- the log level
//	msg	- the log message
//	ap	- formatted parameter
////////////////////////////////////////////////////////////////////////////////
void con_log_v(int lvl, const char *msg, va_list ap);

#endif // _H_GUI_CON_
