#ifndef _H_GUI_INT_
#define _H_GUI_INT_

////////////////////////////////////////////////////////////////////////////////
// FILE: gui_int.h
// DESC: Public interface for accessing the gui. The init function of the 
//	 specific gui sets this function pointer to the correct values, so that 
//	 the user can use this interface without knowing which actual gui was 
//	 loaded.
////////////////////////////////////////////////////////////////////////////////

#include <stdarg.h>

////////////////////////////////////////////////////////////////////////////////
// Closes the console and releases used memory.
////////////////////////////////////////////////////////////////////////////////
extern void (*gui_deinit)();

////////////////////////////////////////////////////////////////////////////////
// Handles the user input.
////////////////////////////////////////////////////////////////////////////////
extern void (*gui_run)();

////////////////////////////////////////////////////////////////////////////////
// Sets the current status message
////////////////////////////////////////////////////////////////////////////////
extern void (*gui_set_status)(const char *msg, ...);

////////////////////////////////////////////////////////////////////////////////
// Logs the given formatted message
// PARA:
//	lvl	- the log level
//	msg	- the log message
//	...	- formatted parameter
////////////////////////////////////////////////////////////////////////////////
extern void (*gui_log)(int lvl, const char *msg, ...);	

////////////////////////////////////////////////////////////////////////////////
// Logs the given formatted message and takes a va_list as parameter.
// PARA:
//	lvl	- the log level
//	msg	- the log message
//	ap	- formatted parameter
////////////////////////////////////////////////////////////////////////////////
extern void (*gui_log_v)(int lvl, const char *msg, va_list ap);

#endif // _H_GUI_INT_
